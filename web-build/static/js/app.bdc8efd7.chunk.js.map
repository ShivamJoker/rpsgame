{"version":3,"sources":["src/PlayScreen.js","App.js","web-build/register-service-worker.js","src/signs/rock.png","src/signs/scissors.png","src/signs/paper.png"],"names":["rock","require","scissors","paper","bgColors","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","header","fontSize","color","img","width","height","button","position","bottom","PlayScreen","useState","counter","setCounter","useEffect","timer","setTimeout","clearTimeout","View","style","compose","Text","Image","source","Math","floor","random","Button","onPress","title","App","play","setPlay","marginBottom","marginTop","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"kMAGMA,EAAOC,EAAQ,IACfC,EAAWD,EAAQ,IACnBE,EAAQF,EAAQ,IAQhBG,EAAW,CAAC,UAAW,UAAW,WA+BlCC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBC,OAAQ,CACNC,SAAU,IACVC,MAAO,QAETC,IAAK,CACHC,MAAO,IACPC,OAAQ,KAEVC,OAAQ,CACNC,SAAU,WACVC,OAAQ,MAIGC,EAlDI,WAAO,IAAD,EACOC,mBAAS,GADhB,WAChBC,EADgB,KACPC,EADO,KAavB,OAVAC,qBAAU,WACR,GAAgB,IAAZF,EAAJ,CACA,IAAMG,EAAQC,YAAW,WACvBH,EAAWD,EAAU,KACpB,KACH,OAAO,WACLK,aAAaF,OAEd,CAACH,IAGF,kBAACM,EAAA,EAAD,CAAMC,MAAOzB,IAAW0B,QAAQ3B,EAAOG,UAAW,CAACE,gBAAiBN,EAASoB,EAAU,MACpFA,EAAU,EACT,kBAACS,EAAA,EAAD,CAAMF,MAAO1B,EAAOQ,QAASW,GAE7B,oCACE,kBAACU,EAAA,EAAD,CAAOH,MAAO1B,EAAOW,IAAKmB,OA1BpB,CAACnC,EAAME,EAAUC,GAClBiC,KAAKC,MAAsB,EAAhBD,KAAKE,aA0BrB,kBAACR,EAAA,EAAD,CAAMC,MAAO1B,EAAOc,QAClB,kBAACoB,EAAA,EAAD,CAAQC,QAAS,kBAAMf,EAAW,IAAIgB,MAAM,mBChCzC,SAASC,IAAO,IAAD,EACJnB,oBAAS,GADL,WACrBoB,EADqB,KACfC,EADe,KAG5B,OAAOD,EACL,kBAAC,EAAD,MAEA,kBAACb,EAAA,EAAD,CAAMC,MAAO1B,EAAOG,WAClB,kBAACyB,EAAA,EAAD,CAAMF,MAAO1B,EAAOQ,QAApB,uBACA,kBAACoB,EAAA,EAAD,CAAMF,MAAO,CAAEjB,SAAU,KAAzB,8BACA,kBAACgB,EAAA,EAAD,CAAMC,MAAO1B,EAAOc,QAClB,kBAACoB,EAAA,EAAD,CAAQC,QAAS,kBAAKI,GAAQ,IAAOH,MAAM,WAMnD,IAAMpC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBC,OAAQ,CACNC,SAAU,GACV+B,aAAc,IAEhB1B,OAAQ,CACNF,MAAO,IACP6B,UAAW,O,2DC/BX,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfC,QAAQH,KAAK,oCAAqCE,U,mBCV1DE,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/app.bdc8efd7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, Button, Image } from \"react-native\";\n\nconst rock = require(\"./signs/rock.png\");\nconst scissors = require(\"./signs/scissors.png\");\nconst paper = require(\"./signs/paper.png\");\n\nconst randomRPS = () => {\n  const signs = [rock, scissors, paper];\n  const rand = Math.floor(Math.random() * 3);\n  return signs[rand];\n};\n\nconst bgColors = ['#1abc9c', '#3498db', '#9b59b6'];\n\nconst PlayScreen = () => {\n  const [counter, setCounter] = useState(3);\n\n  useEffect(() => {\n    if (counter === 0) return;\n    const timer = setTimeout(() => {\n      setCounter(counter - 1);\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [counter]);\n\n  return (\n    <View style={StyleSheet.compose(styles.container, {backgroundColor: bgColors[counter - 1]})}>\n      {counter > 0 ? (\n        <Text style={styles.header}>{counter}</Text>\n      ) : (\n        <>\n          <Image style={styles.img} source={randomRPS()} />\n          <View style={styles.button}>\n            <Button onPress={() => setCounter(3)} title=\"Play Again\" />\n          </View>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  header: {\n    fontSize: 150,\n    color: \"#fff\"\n  },\n  img: {\n    width: 200,\n    height: 200,\n  },\n  button: {\n    position: \"absolute\",\n    bottom: 35,\n  },\n});\n\nexport default PlayScreen;\n","import React, { useState } from \"react\";\nimport { StyleSheet, Text, View, Button } from \"react-native\";\nimport PlayScreen from \"./src/PlayScreen\";\n\nexport default function App() {\n  const [play, setPlay] = useState(false);\n\n  return play ? (\n    <PlayScreen />\n  ) : (\n    <View style={styles.container}>\n      <Text style={styles.header}>Rock Paper Scissors</Text>\n      <Text style={{ fontSize: 70 }}>✊ ✋ ✌️</Text>\n      <View style={styles.button}>\n        <Button onPress={()=> setPlay(true)} title=\"Play\" />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  header: {\n    fontSize: 28,\n    marginBottom: 30,\n  },\n  button: {\n    width: 240,\n    marginTop: 50,\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/rock.6c2a82f7.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.293adbc7.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.375c7c6a.png\";"],"sourceRoot":""}